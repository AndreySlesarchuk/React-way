__10/10/2019 __10/08/2019 __10/09/2019 __10/08/2019
-- lesson 78 - login и logout api
    https://www.youtube.com/watch?v=FCvOFaqvYPQ
    https://youtu.be/oWeSh6-Mrvg
    final redux-form lesson
__10/07/2019 __10/06/2019 __10/05/2019 __10/04/2019 __10/03/2019 __10/02/2019 __10/01/2019  with new forces
    hasError = meta.touched && meta.error;
__09/30/2019 __09/29/2019 __09/28/2019 -- lesson 77 - redux-form field validation https://youtu.be/WCNuRH66lEQ
    Валидация формы (полей) Filed validation ! Осторожно Замыкание!
__09/22/2019 __09/21/2019 __09/20/2019
-- lesson 77 : - redux-form field validation
    https://youtu.be/WCNuRH66lEQ
    ! validation functions
__09/19/2019 __09/18/2019 __09/17/2019 __09/16/2019 __09/15/2019
__09/14/2019 __09/13/2019 __09/12/2019 __09/11/2019 __09/10/2019
    !! Field need component <Field name = "newPostText" component="textarea"/>
    !! menu - Refactor -> Extract -> Component -> Function - newName...
    -- lesson 76 - redux-form base conceptions https://www.youtube.com/watch?v=FCvOFaqvYPQ
    https://youtu.be/FCvOFaqvYPQ?t=660  https://youtu.be/yhBYEM3VDTk?t=1303
__09/08/2019 __09/07/2019 __09/06/2019
    -- lesson 75 - redux-form https://www.youtube.com/watch?v=yhBYEM3VDTk
    console -> store.getState().form
    !  yarn add redux-form
    https://redux-form.com
__09/01/2019 __09/03/2019 __09/04/2019 __09/05/2019
    prevProps, prevState
    getDerivedStateFromProps() нам не нужен этот метод
    componentDidUpdate адекватный метод
__08/28/2019 __08/29/2019 __08/30/2019 __08/31/2019
__08/27/2019 Happy birthday __08/26/2019 08/23/2019 __08/24/2019 __08/25/2019
    -- lesson 74 componentDidUpdate   https://youtu.be/wcwG-pofoZk?list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8
    Компонент монтируется один раз. А потом, когда в нём меняется локальный стейт либо кто-то извне хочет
     перерисовать компонент и закинуть в него новые пропсы.. То срабатывает метод жизненного цикла componentDidMount
__08/16/2019 __08/17/2019 __08/18/2019 __08/19/2019 __08/20/2019 __08/21/2019 __08/22/2019
    -- lesson 73 http put, local state https://www.youtube.com/watch?v=1faxVHNBnsU
    request payload     ref - uses bad - use local state
__08/15/2019
    -- lesson 72 - обновляем create-react-app https://www.youtube.com/watch?v=lrP3mV9cNF4
    npm check-updates
        ncu -u
    npm install -g npm-check-updates
__08/14/2019
    -- lesson 72 - обновляем create-react-app https://youtu.be/lrP3mV9cNF4
    create-react-app update to new version https://create-react-app.dev/docs/updating-to-new-releases
    https://github.com/facebook/create-react-app/blob/master/CHANGELOG.md
    1. npm install --save --save-exact react-scripts@3.0.1
    2. npm install --save --save-exact react-scripts@3.1.0
    3. npm install --save --save-exact react-scripts@3.1.1
__08/13/2019
    -- lesson 71 -  setState, local state https://www.youtube.com/watch?v=78ak5Jqmh9g
    Но... Локальный стейт всё равно можно и нужно применять для каких-то локальных вещей,
     которые с натяжкой можно отнести к бизнес-логике. Мы начнём потиху этот нюанс изучать с вами!
     editMode: false - span or if true input
!   Локальный стейт - дополнение к глобальному стейту. Идея такая - не замусоривать основной стейт
    this.forceUpdate();
! raml.raml
__08/11/2019
    npm install -g npm
    Compose Композиция в нативном javascript нет
    !!  connect - a function that returns hoc
__08/10/2019
    -- lesson 70 -  функция compose https://www.youtube.com/watch?v=tf4E6tw8ZVw&t=
    Функция compose позволяет нам писать более компактный и читаемый код.
    Идея простая: мы делаем композицию (комбинацию) каких-то функций.
    Первая в очереди функция (последняя переданная в compose) получает аргумент и обрабатывает его,
    возвращая результат, который передаётся в следюущую функцию в цепочке.
    И так происходит до самого конца. Что-то типа конвейера
__08/09/2019 practice and go to way
    compose recompose hoc https://habr.com/ru/company/raiffeisenbank/blog/354768/
        second explanation https://smyt.ru/blog/komponenty-vysshego-poryadka-s-recompose/
            https://jaketrent.com/post/ways-to-compose-react-components/
    https://monsterlessons.com/project/categories/react?page=3
__08/07/2019
    -- lesson 69 - Redirect https://www.youtube.com/watch?v=7W4PD4BN3eY&t=19s
!   - HOC - функция которая принимает компоненту и возвращает контейнерную компоненту
    ! hocs - is called with the prefix with. example: withAuthRedirect(Dialogs)
!   - Component (Компонента) - функция которая принимает пропсы а возвращает разметку JSX
!   - JSX this HTML in JavaScript

__08/06/2019
       -- lesson 68 - React JS - Redirect https://www.youtube.com/watch?v=_X3dVadZp2U&t=14s
    Если по дефолту экспортитуем с именем (Login) то в компоненте можем импортировать под любым именем LoginPage в App.js
    insert import {Redirect} from "react-router-dom";
!   Самый главный грех - дублирование кода!
    HOC - high order component
__08/05/2019
    -- lesson 67: React JS - урок redux-thunk 2 в деталях (практика) https://www.youtube.com/watch?v=18hAMlMkQks&t=26s
! Как только появляется работа с данными(базой данных) сразу создаем DAL (api.js)
    промисы https://learn.javascript.ru/promise-basics
__08/04/2019
!   Все запросы должны быть в одном места, в
    Санки и функции приходят из пропсов в презентационную компоненту
__08/03/2019
    -- lesson 66 - React JS - урок redux-thunk в деталях (практика) https://www.youtube.com/watch?v=dtKX3JyeVts&t=2136s
        ! Санки создаем в редъюсерах так же как и актион креаторы
            Санка это функция которая внутри себя диспатчит другие обычные экшины и в основном диспатчит экшены
        ! Почитать про замыкания
        applyMiddleware()
!   npm i redux-thunk
!   yarn внедрить - npm i yarn | + yarn@1.17.3 added 1 package and audited 878714 packages in 10.824s
__08/02/2019 САНКИ - thunk
    -- lesson 65 - урок redux-thunk в деталях (теория) https://www.youtube.com/watch?v=eWdnjfRu9Io&t=21s
    thunk , Noun thunk / thunks , преобразователь thunk ,
    Verb thunk / thunked /  thunked / thunking / thunks , преобразовывать
    Санка это функция которая умеет диспатчить обычные экшены
__08/01/2019
    -- lesson 64 практика, button disabled (follow\unfollow) https://www.youtube.com/watch?v=iobMksCYGHE&t=347s
    function - some
__07/31/2019
    -- lesson 63 практика, DAL, axios.create https://www.youtube.com/watch?v=tZahQsOc9Jk
    UI - react, BLL - redux, DAL - data access layer (api)
__07/30/2019
    -- lesson 62 follow-unfollow api https://www.youtube.com/watch?v=oLIrtUrm5us
        pre fly request
__07/25/2019    -- Odesa Zatoka Favorit
__07/21/2019 __07/27/2019 __07/27/2019 __07/28/2019 authorization error   чеснок логинизация
    -- lesson 61 cookie, login в теории, auth/me https://www.youtube.com/watch?v=b3pU3hsJlNk
        1. https://social-network.samuraijs.com/login   login: dan7@list.ru password: seal777
            { data: { id: 1350, login: "dan7", email: "dan7@list.ru" },
            messages: [ ], resultCode: 0
            }
        2. https://social-network.samuraijs.com/api/1.0/auth/me
        *Куки: https://youtu.be/KcAKrtr4qyg
        *Авторизация через Куки: https://youtu.be/MFhbPi5UtCU
        *Как сервер хранит пароль: https://youtu.be/g1WqXr1Gxws
 ! CORS Cross-origin resource sharing — технология современных браузеров, которая позволяет предоставить
            веб-странице доступ к ресурсам другого домена.
__07/12-20/2019 props.match.params
    -- lesson 60 withRouter https://www.youtube.com/watch?v=e6SpHkb0E3I
        withRouter (из маршрута) компонента высшего порядка

__07/11-12/2019
    -- lesson 59 profile page, ajax, api  https://www.youtube.com/watch?v=MM02LsZqssQ
    https://social-network.samuraijs.com/api/1.0/profile/2
__07/10/2019
    -- lesson 58  mapDispatchToProps лайф-хак  https://www.youtube.com/watch?v=_LZXisuCluw
    mapStateToProps и mapDispatchToProps коннектятся в props | mapDispatchToProps reformat
__07/09/2019
    -- lesson 57  пример Preloader, loader-gif, isFetching indication  https://www.youtube.com/watch?v=qE8ThPt1EIM
        loader gif   https://loading.io/
__07/07/2019 __07/08/2019
    -- lesson 56  Презентационная и Контейнерная компоненты и чистая функциональная компонента
    https://www.youtube.com/watch?v=D0kB1IvCKrI !   Контейнерная компонента из двух частей  !   JSX браузером не понимается
__07/05/2019 __07/06/2019
    -- lesson 55 pagination, постраничный вывод пользователей    https://www.youtube.com/watch?v=ap8HxJPwJhY
        https://social-network.samuraijs.com/       https://social-network.samuraijs.com/api/1.0/users?page=2&count=2
        ! JSON EDITOR https://jsoneditoronline.org/        ! JSON Formatter
__07/04/2019
    -- lesson 54 жизненный цикл, life cycle methods, componentDidMount  https://www.youtube.com/watch?v=auAtFC5nfTs
        componentDidMount() componentDidUpdate()
        ! default constructor not need  constructor(props) {super(props);}
        ! классовая компонента 1. обязателен метод render возвращающий jsx  2. props внутри объекта, обращение через this
    -- lesson 53 классовый компонент (extends React.Component) 7 и 36 уроки пересмотреть https://www.youtube.com/watch?v=vO63wxg4aKY
__07/02/2019
    -- lesson 52 Side Effect (Побочный эффект) https://youtu.be/O7o89_1sM5Y?list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8
__07/01/2019
    -- lesson 50 REST API (краткая теория) Application Programm[-ing] Interface
        https://www.youtube.com/watch?v=c34P8-9YVMQ    Interface - https://www.youtube.com/watch?v=c34P8-9YVMQ
        Server API https://monosnap.com/file/Dbizjl0M1djY7i31oWIvXc460EYdQa
        https://monosnap.com/file/hEq853r6WDDyM4g155rKO0QpFpJKHN
        Ajax в деталях (get, post, rest api, axios, jquery, options, cors):
        https://www.youtube.com/watch?v=wXKTQXLblwY&list=PLcvhF2Wqh7DNDDIp2MGbv8cMYsoUO1lew
    -- lesson 51 Users API  https://www.youtube.com/watch?v=n9op6xgJMFo
        ! axios https://monosnap.com/file/bEkFcuE03d7Tplasl9jfUdnw2ev2Ml  npm install axios --save
        http://social-network.samuraijs.com/docs#
        https://docs.google.com/document/d/1ZSXmTzkgq_Kj1VbWuq8fTv_DPD95GFDvPZgqFeIYGoM/edit#
        https://social-network.samuraijs.com/api/1.0/users    https://jsoneditoronline.org/ http://jsonviewer.stack.hu/
__06/24/2019 __06/29/2019
    -- lesson 49 Страница пользователей AJAX
        https://www.youtube.com/watch?v=ceSZUZZaW30&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=50
        <Route />route следит за строкой в браузере, если есть открывает, если нет окно по умолчанию
        jsx расширение только для компонент, js для редьюсеров и всего остального транспилятор Babel переводит из jsx в js
        разработку важнее начинать с бизнес уровня STATE !   DDD Domain Driven Design https://habr.com/ru/post/334126/
    -- lesson 48 Копия состояние в DialogReducer    npm update --save react
        https://www.youtube.com/watch?v=R3ZsEyc4BCo&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=50&t=2s
    -- lesson 47 Копия состояние в ProfileReducer    https://www.youtube.com/watch?v=L2SSsOmqiig
        чистая функция - получающая и выдающая данные одинаковые https://monosnap.com/file/ab6x0eRAhNd1u09ZNM95Idjzi0SRoP
        детерминированность, демпотентность, инмютабельность
__06/24/2019 npm install react-redux --save
    -- lesson 46 deep copy vs shallow copy  var b = {...a}; https://monosnap.com/file/k9d44KTCCB8QFkz5StIh93oPwDFpQN
        спрэд оператор ...
__06/20/2019
    -- lesson 45 connect, mapStateToProps, mapDispatchToProps https://www.youtube.com/watch?v=SYaHe-lP7eY
__06/21/2019 __06/22/2019 __06/23/2019
    -- lesson 44 React JS Практика Context API  -- https://www.youtube.com/watch?v=Q_UvAaKSK90
        https://monosnap.com/file/LYT3309k4sQJnIlZ5LWBKq68bMsCEQ https://monosnap.com/file/4xpyFiwZIh2cQr0lEBejzTSH5pbgpM
        https://ru.reactjs.org/docs/context.html Контекст позволяет передавать данные через дерево компонентов без
        необходимости передавать пропмсы на промежуточных уровнях https://monosnap.com/file/gEKICR2XssAdoZtPVeWzCxlXIAfveM
        ! все что приходит компоненте через пропсы - остается в пропсах а не контексте
        ! Error: render is not a function https://github.com/facebook/react/issues/12241 !braces on the new line
        -- React Redux library, connect
__06/13/2019 __06/13/2019 __06/19/2019
    -- lesson 43 redux first step - video https://www.youtube.com/watch?v=cbnExb3GSFM
        - npm install redux --save
        - debugger undefined profile Page- https://monosnap.com/file/T7Fov3zhyUI6KaSockfjIHT6Cw4aMi
    -- Контейнерная компонента создается над презентационной  - как можно меньше лишней информации
        - избавиться от store и dispatch https://monosnap.com/file/i6JTdEvTEzu3CxzW1FVtmO4ojFH724
            https://monosnap.com/file/wxu9JftEpP1DVDqG52cuxujMiJkzTG
__06/11/2019
    -- lesson 42 redux - video https://www.youtube.com/watch?v=IUEkRTov_E4&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=43
__06/10/2019  ! компоненте давать только необходимое
    -- lesson 41 reducer (почти redux)
        - video https://www.youtube.com/watch?v=GPabDsMyceU&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=42
        - action - объект с минимум type - reducer - функция которая принимает state, action и применяет по необходимости действия и возвращает новый стейт
        https://monosnap.com/file/KU0nvBTk5afP0gYou9WKuhM1hXXKKY https://monosnap.com/file/jiBRKBzzC7imqI8GPHj3LWCS0l9mOm
    -- lesson 40 adding message
        - video https://www.youtube.com/watch?v=TUcn_vPHfxU&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=41
__06/06/2019 #Leaflet : it's time to leave GoogleMaps by Guillaume Soldera https://www.youtube.com/watch?v=_Jm-UPOEE0o
__06/03/2019
    -- lesson 39 action creator action type
        - video https://www.youtube.com/watch?v=EW8cEDyYAYM&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=40
        - action это объект который формируется в компонентах для передачи объекта через метод dispatch
            - https://monosnap.com/file/J8Mzif8St3NCRnLrmPfVLRdaA3qMrN
            - https://monosnap.com/file/M0JbDCimr562hn4RC8gVfmJfHIlfTS
            - управление состояниями REDUX - let action = actionCreator()
        - 24.30 Хорошие слова о мотивации и Беларуси )))
__06/02/2019
    -- lesson 38 DISPATCH (отправка методов) type action
        - video https://www.youtube.com/watch?v=AyCBG4LcUSA&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=39
__06/01/2019
    -- lesson 38
    - dispatch and action
    - API application program interface
__05/30/2019
    -- lesson 36 https://www.youtube.com/watch?v=spTyL4QK1KI
        - base OOP principles https://codepen.io/dimych-the-scripter/pen/gEeJVp
        - image for github https://avatars0.githubusercontent.com/u/25076693?s=400&v=4
        - React JS - The Samurai's way,  bind  почитать!!!
__05/30/2019
    -- lesson 35 (callback, subscribe, observer)
        - video https://www.youtube.com/watch?v=iN6QXbHedQc&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=36
        - window.state = state; https://monosnap.com/file/1peMRi2ojcXuVK1gynPfPgZ7qiEGI4
    -- lesson 36 // state - OOP
        video https://www.youtube.com/watch?v=s1n24A2Xr0M&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=37
__05/29/2019
    -- lesson 34 (FLUX-> Redux круговорот на каждый символ) REDUX MobX...
        - video https://www.youtube.com/watch?v=bpEy10oJSCg&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=35
        - image https://monosnap.com/file/Qw162Jl9wng3jjFqAAZSDvB27FYHgG
        - console.log(text); https://monosnap.com/file/HrJKmHqyikGA8uZ0aRylzwOOpQk0oa
__05/28/2019
    -- lesson 32, 33 (прокидываем callback через props) функция обратного вызова  - FLUX концепции rerendererEntireTree
    -- render.js index.js store.js
__05/27/2019
    -- lesson 31 (onClick, ref, VirtualDOM)     - callback
        - <textarea ref={newPostElement}><textarea> let text = newPostElement.current.value;
__05/24/2019
    -- store.js in redux
        - NodeJS  SPA (Single Page Application) ./docs/pagesLifecycle.png
        - Функциональная компонента (presentational, stateless, dumb) функция которая возвращает JSX разметку (только
            отрисовывает, нужны props
        - PROPS - 'это объект' в тэги которые в свою очередь в другие тэги
        - MAP метод массива, для преобразования массивов
        - ROUTE - vfhihens
        - BLL - Buisness Logic Layer данные
__05/23/2019
    -- Прокидываем props
        -  <Route path='/dialogs' component={Dialogs} /> changing to
            <Route path='/dialogs' render={ () => {<Dialogs />} />  -  move data up
__05/15/2019
    -- Переход только при полном совпадении exact <Route exact path='/dialogs' component={Dialogs} />
        - Объекты    - BLL - Buisness Logic Layer      UI - User Interface SOLID
__05/14/2019
    - CRA ROUTER for nodejs ->> nmp i react-router-dom -save
    -- npm install - for project from git for refresh
    -- frames <BrowserRouter> ... <Route path='/dialogs' component={Music} /> ... </BrowserRouter>
    - <NavLink to="/dialogs">Messages</NavLink>
    - History API html5  | preventDefault
__05/13/2019
    - Git https://github.com/it-kamasutra/react-way-of-samurai
    - /node_modules not stored in the git  >npm install
    - Props(Объект) Параметры для компоненты(функции) const Header = (props) => { {props.message}
    - debugger; останавливается выполнение и смотрим все необходимое
    - console.log(c);
__05/12/2019
    - Бэм методология https://ru.bem.info/methodology/
    - Не используем в названиях стилей дефис - из-за сложной реализации в className={c["header-n"]} - неудобно?!
    - Два стиля для класса {'${c.item} ${c.active}'}
__5/11/2019
    - nodejs https://nodejs.org/en/
    - start node .js command prompt C:\Windows\System32\cmd.exe /k "C:\Program Files\nodejs\nodevars.bat"
    - npx create-react-app my-app  https://github.com/facebook/create-react-app
    - cd my-app
    - npm start
    - index.js точка входа --> /public/index.html
    - Компонента - 1. Это фунция, возвращающая разметку (JSX) 2. Это тег
!   -  В браузер разметка jsx не попадает

-- WebStorm keyboard shortcut
    _ duplicate blok(or line) - Ctrl-D
    - alignment - Ctrl+A+Ctrl+Alt+L
    - comments - Crtl+Shift+/
    - find files(classes...) Ctrl+Shift+N
    - create variable Ctrl-Alt-V
    - The Ctrl+Shift+Backspace (Navigate | Last Edit Location) brings you back to the last place where you made changes in the code.
        Pressing Ctrl+Shift+Backspace several times moves you deeper into your changes history.
    - передвижение по словам - Crtl+->, с выделением слова Crtl+Shift->
    - Все места вызова тэга Alt+F7
    - https://codepen.io/anon/pen/oJNVJW
    - image https://cdn-images-1.medium.com/max/1600/1*CvjclMDwgh9AqED_h5UVCA.jpeg
    - model https://marvelapp.com/39ef033/screen/50996553
_
!!! 30, 40 lesson for fixing

    vvvvvvvvvvvvvv-TODO-assemble-vvvvvvvvvvvvvv
    - https://map.worldweatheronline.com/
    - https://leafletjs.com/examples/quick-start/
        https://codepen.io/PaulLeCam/pen/gzVmGw

    - https://www.openstreetmap.org/#map=6/54.008/28.191
    - http://localhost:9081/master
    ^^^^^^^^^^^^^^disassemble^^^^^^^^^^^^^^^^^^

